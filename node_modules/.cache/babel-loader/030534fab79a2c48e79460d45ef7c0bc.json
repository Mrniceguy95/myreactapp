{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nconst util = require(\"util\");\n\nconst SyncBailHook = require(\"./SyncBailHook\");\n\nfunction Tapable() {\n  this._pluginCompat = new SyncBailHook([\"options\"]);\n\n  this._pluginCompat.tap({\n    name: \"Tapable camelCase\",\n    stage: 100\n  }, options => {\n    options.names.add(options.name.replace(/[- ]([a-z])/g, str => str.substr(1).toUpperCase()));\n  });\n\n  this._pluginCompat.tap({\n    name: \"Tapable this.hooks\",\n    stage: 200\n  }, options => {\n    let hook;\n\n    for (const name of options.names) {\n      hook = this.hooks[name];\n\n      if (hook !== undefined) {\n        break;\n      }\n    }\n\n    if (hook !== undefined) {\n      const tapOpt = {\n        name: options.fn.name || \"unnamed compat plugin\",\n        stage: options.stage || 0\n      };\n      if (options.async) hook.tapAsync(tapOpt, options.fn);else hook.tap(tapOpt, options.fn);\n      return true;\n    }\n  });\n}\n\nmodule.exports = Tapable;\n\nTapable.addCompatLayer = function addCompatLayer(instance) {\n  Tapable.call(instance);\n  instance.plugin = Tapable.prototype.plugin;\n  instance.apply = Tapable.prototype.apply;\n};\n\nTapable.prototype.plugin = util.deprecate(function plugin(name, fn) {\n  if (Array.isArray(name)) {\n    name.forEach(function (name) {\n      this.plugin(name, fn);\n    }, this);\n    return;\n  }\n\n  const result = this._pluginCompat.call({\n    name: name,\n    fn: fn,\n    names: new Set([name])\n  });\n\n  if (!result) {\n    throw new Error(`Plugin could not be registered at '${name}'. Hook was not found.\\n` + \"BREAKING CHANGE: There need to exist a hook at 'this.hooks'. \" + \"To create a compatiblity layer for this hook, hook into 'this._pluginCompat'.\");\n  }\n}, \"Tapable.plugin is deprecated. Use new API on `.hooks` instead\");\nTapable.prototype.apply = util.deprecate(function apply() {\n  for (var i = 0; i < arguments.length; i++) {\n    arguments[i].apply(this);\n  }\n}, \"Tapable.apply is deprecated. Call apply on the plugin directly instead\");","map":{"version":3,"sources":["C:/Users/guido/Documents/GitHub/myreactapp/node_modules/globalize-webpack-plugin/node_modules/tapable/lib/Tapable.js"],"names":["util","require","SyncBailHook","Tapable","_pluginCompat","tap","name","stage","options","names","add","replace","str","substr","toUpperCase","hook","hooks","undefined","tapOpt","fn","async","tapAsync","module","exports","addCompatLayer","instance","call","plugin","prototype","apply","deprecate","Array","isArray","forEach","result","Set","Error","i","arguments","length"],"mappings":"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","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst util = require(\"util\");\r\nconst SyncBailHook = require(\"./SyncBailHook\");\r\n\r\nfunction Tapable() {\r\n\tthis._pluginCompat = new SyncBailHook([\"options\"]);\r\n\tthis._pluginCompat.tap({\r\n\t\tname: \"Tapable camelCase\",\r\n\t\tstage: 100\r\n\t}, options => {\r\n\t\toptions.names.add(options.name.replace(/[- ]([a-z])/g, str => str.substr(1).toUpperCase()));\r\n\t});\r\n\tthis._pluginCompat.tap({\r\n\t\tname: \"Tapable this.hooks\",\r\n\t\tstage: 200\r\n\t}, options => {\r\n\t\tlet hook;\r\n\t\tfor(const name of options.names) {\r\n\t\t\thook = this.hooks[name];\r\n\t\t\tif(hook !== undefined) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(hook !== undefined) {\r\n\t\t\tconst tapOpt = {\r\n\t\t\t\tname: options.fn.name || \"unnamed compat plugin\",\r\n\t\t\t\tstage: options.stage || 0\r\n\t\t\t};\r\n\t\t\tif(options.async)\r\n\t\t\t\thook.tapAsync(tapOpt, options.fn);\r\n\t\t\telse\r\n\t\t\t\thook.tap(tapOpt, options.fn);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n}\r\nmodule.exports = Tapable;\r\n\r\nTapable.addCompatLayer = function addCompatLayer(instance) {\r\n\tTapable.call(instance);\r\n\tinstance.plugin = Tapable.prototype.plugin;\r\n\tinstance.apply = Tapable.prototype.apply;\r\n};\r\n\r\nTapable.prototype.plugin = util.deprecate(function plugin(name, fn) {\r\n\tif(Array.isArray(name)) {\r\n\t\tname.forEach(function(name) {\r\n\t\t\tthis.plugin(name, fn);\r\n\t\t}, this);\r\n\t\treturn;\r\n\t}\r\n\tconst result = this._pluginCompat.call({\r\n\t\tname: name,\r\n\t\tfn: fn,\r\n\t\tnames: new Set([name])\r\n\t});\r\n\tif(!result) {\r\n\t\tthrow new Error(`Plugin could not be registered at '${name}'. Hook was not found.\\n` +\r\n\t\t\t\"BREAKING CHANGE: There need to exist a hook at 'this.hooks'. \" +\r\n\t\t\t\"To create a compatiblity layer for this hook, hook into 'this._pluginCompat'.\");\r\n\t}\r\n}, \"Tapable.plugin is deprecated. Use new API on `.hooks` instead\");\r\n\r\nTapable.prototype.apply = util.deprecate(function apply() {\r\n\tfor(var i = 0; i < arguments.length; i++) {\r\n\t\targuments[i].apply(this);\r\n\t}\r\n}, \"Tapable.apply is deprecated. Call apply on the plugin directly instead\");\r\n"]},"metadata":{},"sourceType":"script"}