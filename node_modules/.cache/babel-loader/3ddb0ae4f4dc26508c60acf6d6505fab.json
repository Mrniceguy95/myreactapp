{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nclass MultiHook {\n  constructor(hooks) {\n    this.hooks = hooks;\n  }\n\n  tap(options, fn) {\n    for (const hook of this.hooks) {\n      hook.tap(options, fn);\n    }\n  }\n\n  tapAsync(options, fn) {\n    for (const hook of this.hooks) {\n      hook.tapAsync(options, fn);\n    }\n  }\n\n  tapPromise(options, fn) {\n    for (const hook of this.hooks) {\n      hook.tapPromise(options, fn);\n    }\n  }\n\n  isUsed() {\n    for (const hook of this.hooks) {\n      if (hook.isUsed()) return true;\n    }\n\n    return false;\n  }\n\n  intercept(interceptor) {\n    for (const hook of this.hooks) {\n      hook.intercept(interceptor);\n    }\n  }\n\n  withOptions(options) {\n    return new MultiHook(this.hooks.map(h => h.withOptions(options)));\n  }\n\n}\n\nmodule.exports = MultiHook;","map":{"version":3,"sources":["C:/Users/guido/Documents/GitHub/myreactapp/node_modules/globalize-webpack-plugin/node_modules/tapable/lib/MultiHook.js"],"names":["Hook","require","MultiHook","constructor","hooks","tap","options","fn","hook","tapAsync","tapPromise","isUsed","intercept","interceptor","withOptions","map","h","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMC,SAAN,CAAgB;AACfC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,SAAKA,KAAL,GAAaA,KAAb;AACA;;AAEDC,EAAAA,GAAG,CAACC,OAAD,EAAUC,EAAV,EAAc;AAChB,SAAI,MAAMC,IAAV,IAAkB,KAAKJ,KAAvB,EAA8B;AAC7BI,MAAAA,IAAI,CAACH,GAAL,CAASC,OAAT,EAAkBC,EAAlB;AACA;AACD;;AAEDE,EAAAA,QAAQ,CAACH,OAAD,EAAUC,EAAV,EAAc;AACrB,SAAI,MAAMC,IAAV,IAAkB,KAAKJ,KAAvB,EAA8B;AAC7BI,MAAAA,IAAI,CAACC,QAAL,CAAcH,OAAd,EAAuBC,EAAvB;AACA;AACD;;AAEDG,EAAAA,UAAU,CAACJ,OAAD,EAAUC,EAAV,EAAc;AACvB,SAAI,MAAMC,IAAV,IAAkB,KAAKJ,KAAvB,EAA8B;AAC7BI,MAAAA,IAAI,CAACE,UAAL,CAAgBJ,OAAhB,EAAyBC,EAAzB;AACA;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACR,SAAI,MAAMH,IAAV,IAAkB,KAAKJ,KAAvB,EAA8B;AAC7B,UAAGI,IAAI,CAACG,MAAL,EAAH,EACC,OAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACA;;AAEDC,EAAAA,SAAS,CAACC,WAAD,EAAc;AACtB,SAAI,MAAML,IAAV,IAAkB,KAAKJ,KAAvB,EAA8B;AAC7BI,MAAAA,IAAI,CAACI,SAAL,CAAeC,WAAf;AACA;AACD;;AAEDC,EAAAA,WAAW,CAACR,OAAD,EAAU;AACpB,WAAO,IAAIJ,SAAJ,CAAc,KAAKE,KAAL,CAAWW,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACF,WAAF,CAAcR,OAAd,CAApB,CAAd,CAAP;AACA;;AAvCc;;AA0ChBW,MAAM,CAACC,OAAP,GAAiBhB,SAAjB","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Hook = require(\"./Hook\");\r\n\r\nclass MultiHook {\r\n\tconstructor(hooks) {\r\n\t\tthis.hooks = hooks;\r\n\t}\r\n\r\n\ttap(options, fn) {\r\n\t\tfor(const hook of this.hooks) {\r\n\t\t\thook.tap(options, fn);\r\n\t\t}\r\n\t}\r\n\r\n\ttapAsync(options, fn) {\r\n\t\tfor(const hook of this.hooks) {\r\n\t\t\thook.tapAsync(options, fn);\r\n\t\t}\r\n\t}\r\n\r\n\ttapPromise(options, fn) {\r\n\t\tfor(const hook of this.hooks) {\r\n\t\t\thook.tapPromise(options, fn);\r\n\t\t}\r\n\t}\r\n\r\n\tisUsed() {\r\n\t\tfor(const hook of this.hooks) {\r\n\t\t\tif(hook.isUsed())\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tintercept(interceptor) {\r\n\t\tfor(const hook of this.hooks) {\r\n\t\t\thook.intercept(interceptor);\r\n\t\t}\r\n\t}\r\n\r\n\twithOptions(options) {\r\n\t\treturn new MultiHook(this.hooks.map(h => h.withOptions(options)));\r\n\t}\r\n}\r\n\r\nmodule.exports = MultiHook;\r\n"]},"metadata":{},"sourceType":"script"}