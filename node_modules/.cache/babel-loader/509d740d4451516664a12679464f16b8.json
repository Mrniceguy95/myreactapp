{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesBailHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onResult,\n    onDone\n  }) {\n    return this.callTapsSeries({\n      onError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n      onResult: (i, result, next) => `if(${result} !== undefined) {\\n${onResult(result)};\\n} else {\\n${next()}}\\n`,\n      onDone\n    });\n  }\n\n}\n\nconst factory = new AsyncSeriesBailHookCodeFactory();\n\nclass AsyncSeriesBailHook extends Hook {\n  constructor(args) {\n    super(args);\n    this.call = this._call = undefined;\n  }\n\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nmodule.exports = AsyncSeriesBailHook;","map":{"version":3,"sources":["C:/Users/guido/Documents/GitHub/myreactapp/node_modules/globalize-webpack-plugin/node_modules/tapable/lib/AsyncSeriesBailHook.js"],"names":["Hook","require","HookCodeFactory","AsyncSeriesBailHookCodeFactory","content","onError","onResult","onDone","callTapsSeries","i","err","next","doneBreak","result","factory","AsyncSeriesBailHook","constructor","args","call","_call","undefined","compile","options","setup","create","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,8BAAN,SAA6CD,eAA7C,CAA6D;AAC5DE,EAAAA,OAAO,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAAD,EAAgC;AACtC,WAAO,KAAKC,cAAL,CAAoB;AAC1BH,MAAAA,OAAO,EAAE,CAACI,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf,KAA6BP,OAAO,CAACK,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CADpC;AAE1BN,MAAAA,QAAQ,EAAE,CAACG,CAAD,EAAII,MAAJ,EAAYF,IAAZ,KAAsB,MAAKE,MAAO,sBAAqBP,QAAQ,CAACO,MAAD,CAAS,gBAAeF,IAAI,EAAG,KAF9E;AAG1BJ,MAAAA;AAH0B,KAApB,CAAP;AAKA;;AAP2D;;AAU7D,MAAMO,OAAO,GAAG,IAAIX,8BAAJ,EAAhB;;AAEA,MAAMY,mBAAN,SAAkCf,IAAlC,CAAuC;AACtCgB,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,UAAMA,IAAN;AACA,SAAKC,IAAL,GAAY,KAAKC,KAAL,GAAaC,SAAzB;AACA;;AAGDC,EAAAA,OAAO,CAACC,OAAD,EAAU;AAChBR,IAAAA,OAAO,CAACS,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,WAAOR,OAAO,CAACU,MAAR,CAAeF,OAAf,CAAP;AACA;;AAVqC;;AAavCG,MAAM,CAACC,OAAP,GAAiBX,mBAAjB","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Hook = require(\"./Hook\");\r\nconst HookCodeFactory = require(\"./HookCodeFactory\");\r\n\r\nclass AsyncSeriesBailHookCodeFactory extends HookCodeFactory {\r\n\tcontent({ onError, onResult, onDone }) {\r\n\t\treturn this.callTapsSeries({\r\n\t\t\tonError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\r\n\t\t\tonResult: (i, result, next) => `if(${result} !== undefined) {\\n${onResult(result)};\\n} else {\\n${next()}}\\n`,\r\n\t\t\tonDone\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst factory = new AsyncSeriesBailHookCodeFactory();\r\n\r\nclass AsyncSeriesBailHook extends Hook {\r\n\tconstructor(args) {\r\n\t\tsuper(args);\r\n\t\tthis.call = this._call = undefined;\r\n\t}\r\n\r\n\r\n\tcompile(options) {\r\n\t\tfactory.setup(this, options);\r\n\t\treturn factory.create(options);\r\n\t}\r\n}\r\n\r\nmodule.exports = AsyncSeriesBailHook;\r\n"]},"metadata":{},"sourceType":"script"}