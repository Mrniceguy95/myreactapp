{"ast":null,"code":"var compile = require(\"./compile\");\n\nfunction alwaysArray(itemOrArray) {\n  return Array.isArray(itemOrArray) ? itemOrArray : itemOrArray ? [itemOrArray] : [];\n}\n\nfunction compileExtracts(attributes) {\n  var cldr, cldrObject, defaultLocale, extracts, formattersAndParsers, timeZoneData, timeZoneDataObject, messages, messagesObject;\n\n  var Globalize = require(\"globalize\");\n\n  attributes = attributes || {};\n  var compilerOptions = {};\n\n  if (attributes.template) {\n    compilerOptions.template = attributes.template;\n  } // Required attributes.\n\n\n  defaultLocale = attributes.defaultLocale;\n  extracts = attributes.extracts; // TODO\n  //assert( defaultLocale )\n  //assert( extracts )\n  //assert( optional cldr )\n  //assert( optional messages )\n  // Optional attributes.\n\n  cldr = attributes.cldr || function (locale) {\n    var cldrData = require(\"cldr-data\");\n\n    return cldrData.entireSupplemental().concat(cldrData.entireMainFor(locale));\n  };\n\n  if (typeof cldr === \"object\") {\n    cldrObject = cldr;\n\n    cldr = function ()\n    /* locale */\n    {\n      return cldrObject;\n    };\n  }\n\n  messages = attributes.messages;\n\n  if (!messages) {\n    messages = {};\n    messages[defaultLocale] = {};\n  }\n\n  if (typeof messages === \"object\") {\n    messagesObject = messages;\n\n    messages = function ()\n    /* locale */\n    {\n      return messagesObject;\n    };\n  }\n\n  timeZoneData = attributes.timeZoneData || function () {\n    return require(\"iana-tz-data\");\n  };\n\n  if (typeof timeZoneData === \"object\") {\n    timeZoneDataObject = timeZoneData;\n\n    timeZoneData = function () {\n      return timeZoneDataObject;\n    };\n  } // TODO\n  //assert( defaultLocale )\n  //assert( extracts )\n\n\n  Globalize.load(cldr(defaultLocale));\n  Globalize.loadMessages(messages(defaultLocale));\n  Globalize.loadTimeZone(timeZoneData());\n  Globalize.locale(defaultLocale);\n  formattersAndParsers = alwaysArray(extracts).reduce(function (sum, extract) {\n    [].push.apply(sum, extract(Globalize));\n    return sum;\n  }, []);\n  return compile(formattersAndParsers, compilerOptions);\n}\n\nmodule.exports = compileExtracts;","map":{"version":3,"sources":["C:/Users/guido/Documents/GitHub/myreactapp/node_modules/globalize-compiler/lib/compile-extracts.js"],"names":["compile","require","alwaysArray","itemOrArray","Array","isArray","compileExtracts","attributes","cldr","cldrObject","defaultLocale","extracts","formattersAndParsers","timeZoneData","timeZoneDataObject","messages","messagesObject","Globalize","compilerOptions","template","locale","cldrData","entireSupplemental","concat","entireMainFor","load","loadMessages","loadTimeZone","reduce","sum","extract","push","apply","module","exports"],"mappings":"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","sourcesContent":["var compile = require( \"./compile\" );\n\nfunction alwaysArray( itemOrArray ) {\n\treturn Array.isArray( itemOrArray ) ? itemOrArray : itemOrArray ? [ itemOrArray ] : [];\n}\n\nfunction compileExtracts( attributes ) {\n\tvar cldr, cldrObject, defaultLocale, extracts, formattersAndParsers, timeZoneData, timeZoneDataObject, messages, messagesObject;\n\tvar Globalize = require( \"globalize\" );\n\n\tattributes = attributes || {};\n\tvar compilerOptions = {};\n\tif (attributes.template) {\n\t\tcompilerOptions.template = attributes.template;\n\t}\n\n\t// Required attributes.\n\tdefaultLocale = attributes.defaultLocale;\n\textracts = attributes.extracts;\n\n\t// TODO\n\t//assert( defaultLocale )\n\t//assert( extracts )\n\t//assert( optional cldr )\n\t//assert( optional messages )\n\n\t// Optional attributes.\n\tcldr = attributes.cldr || function( locale ) {\n\t\tvar cldrData = require( \"cldr-data\" );\n\t\treturn cldrData.entireSupplemental().concat( cldrData.entireMainFor( locale ) );\n\t};\n\tif ( typeof cldr === \"object\" ) {\n\t\tcldrObject = cldr;\n\t\tcldr = function( /* locale */ ) {\n\t\t\treturn cldrObject;\n\t\t};\n\t}\n\n\tmessages = attributes.messages;\n\tif ( !messages ) {\n\t\tmessages = {};\n\t\tmessages[ defaultLocale ] = {};\n\t}\n\tif ( typeof messages === \"object\" ) {\n\t\tmessagesObject = messages;\n\t\tmessages = function( /* locale */ ) {\n\t\t\treturn messagesObject;\n\t\t};\n\t}\n\n\ttimeZoneData = attributes.timeZoneData || function() {\n\t\treturn require( \"iana-tz-data\" );\n\t};\n\tif ( typeof timeZoneData === \"object\" ) {\n\t\ttimeZoneDataObject = timeZoneData;\n\t\ttimeZoneData = function() {\n\t\t\treturn timeZoneDataObject;\n\t\t};\n\t}\n\n\t// TODO\n\t//assert( defaultLocale )\n\t//assert( extracts )\n\n\tGlobalize.load( cldr( defaultLocale ) );\n\tGlobalize.loadMessages( messages( defaultLocale ) );\n\tGlobalize.loadTimeZone( timeZoneData() );\n\tGlobalize.locale( defaultLocale );\n\tformattersAndParsers = alwaysArray( extracts ).reduce(function( sum, extract ) {\n\t\t[].push.apply( sum, extract( Globalize ) );\n\t\treturn sum;\n\t}, [] );\n\n\treturn compile( formattersAndParsers, compilerOptions );\n}\n\nmodule.exports = compileExtracts;\n"]},"metadata":{},"sourceType":"script"}