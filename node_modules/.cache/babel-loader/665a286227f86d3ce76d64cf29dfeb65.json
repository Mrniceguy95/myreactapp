{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nclass HookMap {\n  constructor(factory) {\n    this._map = new Map();\n    this._factory = factory;\n    this._interceptors = [];\n  }\n\n  get(key) {\n    return this._map.get(key);\n  }\n\n  for(key) {\n    const hook = this.get(key);\n\n    if (hook !== undefined) {\n      return hook;\n    }\n\n    let newHook = this._factory(key);\n\n    const interceptors = this._interceptors;\n\n    for (let i = 0; i < interceptors.length; i++) {\n      newHook = interceptors[i].factory(key, newHook);\n    }\n\n    this._map.set(key, newHook);\n\n    return newHook;\n  }\n\n  intercept(interceptor) {\n    this._interceptors.push(Object.assign({\n      factory: (key, hook) => hook\n    }, interceptor));\n  }\n\n  tap(key, options, fn) {\n    return this.for(key).tap(options, fn);\n  }\n\n  tapAsync(key, options, fn) {\n    return this.for(key).tapAsync(options, fn);\n  }\n\n  tapPromise(key, options, fn) {\n    return this.for(key).tapPromise(options, fn);\n  }\n\n}\n\nmodule.exports = HookMap;","map":{"version":3,"sources":["C:/Users/guido/Documents/GitHub/myreactapp/node_modules/globalize-webpack-plugin/node_modules/tapable/lib/HookMap.js"],"names":["HookMap","constructor","factory","_map","Map","_factory","_interceptors","get","key","for","hook","undefined","newHook","interceptors","i","length","set","intercept","interceptor","push","Object","assign","tap","options","fn","tapAsync","tapPromise","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,OAAN,CAAc;AACbC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACpB,SAAKC,IAAL,GAAY,IAAIC,GAAJ,EAAZ;AACA,SAAKC,QAAL,GAAgBH,OAAhB;AACA,SAAKI,aAAL,GAAqB,EAArB;AACA;;AAEDC,EAAAA,GAAG,CAACC,GAAD,EAAM;AACR,WAAO,KAAKL,IAAL,CAAUI,GAAV,CAAcC,GAAd,CAAP;AACA;;AAEDC,EAAAA,GAAG,CAACD,GAAD,EAAM;AACR,UAAME,IAAI,GAAG,KAAKH,GAAL,CAASC,GAAT,CAAb;;AACA,QAAGE,IAAI,KAAKC,SAAZ,EAAuB;AACtB,aAAOD,IAAP;AACA;;AACD,QAAIE,OAAO,GAAG,KAAKP,QAAL,CAAcG,GAAd,CAAd;;AACA,UAAMK,YAAY,GAAG,KAAKP,aAA1B;;AACA,SAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,YAAY,CAACE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC5CF,MAAAA,OAAO,GAAGC,YAAY,CAACC,CAAD,CAAZ,CAAgBZ,OAAhB,CAAwBM,GAAxB,EAA6BI,OAA7B,CAAV;AACA;;AACD,SAAKT,IAAL,CAAUa,GAAV,CAAcR,GAAd,EAAmBI,OAAnB;;AACA,WAAOA,OAAP;AACA;;AAEDK,EAAAA,SAAS,CAACC,WAAD,EAAc;AACtB,SAAKZ,aAAL,CAAmBa,IAAnB,CAAwBC,MAAM,CAACC,MAAP,CAAc;AACrCnB,MAAAA,OAAO,EAAE,CAACM,GAAD,EAAME,IAAN,KAAeA;AADa,KAAd,EAErBQ,WAFqB,CAAxB;AAGA;;AAEDI,EAAAA,GAAG,CAACd,GAAD,EAAMe,OAAN,EAAeC,EAAf,EAAmB;AACrB,WAAO,KAAKf,GAAL,CAASD,GAAT,EAAcc,GAAd,CAAkBC,OAAlB,EAA2BC,EAA3B,CAAP;AACA;;AAEDC,EAAAA,QAAQ,CAACjB,GAAD,EAAMe,OAAN,EAAeC,EAAf,EAAmB;AAC1B,WAAO,KAAKf,GAAL,CAASD,GAAT,EAAciB,QAAd,CAAuBF,OAAvB,EAAgCC,EAAhC,CAAP;AACA;;AAEDE,EAAAA,UAAU,CAAClB,GAAD,EAAMe,OAAN,EAAeC,EAAf,EAAmB;AAC5B,WAAO,KAAKf,GAAL,CAASD,GAAT,EAAckB,UAAd,CAAyBH,OAAzB,EAAkCC,EAAlC,CAAP;AACA;;AAzCY;;AA4CdG,MAAM,CAACC,OAAP,GAAiB5B,OAAjB","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nclass HookMap {\r\n\tconstructor(factory) {\r\n\t\tthis._map = new Map();\r\n\t\tthis._factory = factory;\r\n\t\tthis._interceptors = [];\r\n\t}\r\n\r\n\tget(key) {\r\n\t\treturn this._map.get(key);\r\n\t}\r\n\r\n\tfor(key) {\r\n\t\tconst hook = this.get(key);\r\n\t\tif(hook !== undefined) {\r\n\t\t\treturn hook;\r\n\t\t}\r\n\t\tlet newHook = this._factory(key);\r\n\t\tconst interceptors = this._interceptors;\r\n\t\tfor(let i = 0; i < interceptors.length; i++) {\r\n\t\t\tnewHook = interceptors[i].factory(key, newHook);\r\n\t\t}\r\n\t\tthis._map.set(key, newHook);\r\n\t\treturn newHook;\r\n\t}\r\n\r\n\tintercept(interceptor) {\r\n\t\tthis._interceptors.push(Object.assign({\r\n\t\t\tfactory: (key, hook) => hook\r\n\t\t}, interceptor));\r\n\t}\r\n\r\n\ttap(key, options, fn) {\r\n\t\treturn this.for(key).tap(options, fn);\r\n\t}\r\n\r\n\ttapAsync(key, options, fn) {\r\n\t\treturn this.for(key).tapAsync(options, fn);\r\n\t}\r\n\r\n\ttapPromise(key, options, fn) {\r\n\t\treturn this.for(key).tapPromise(options, fn);\r\n\t}\r\n}\r\n\r\nmodule.exports = HookMap;\r\n"]},"metadata":{},"sourceType":"script"}