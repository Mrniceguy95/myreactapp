{"ast":null,"code":"var _jsxFileName = \"/home/guido/Documents/GitHub/myreactapp/src/components/closingPromptComponent/closingPromptComponent.js\";\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport InputPass from './inputPassComponent';\nimport axios from 'axios';\nimport { PoseGroup } from 'react-pose'; //components\n\nclass ClosingPrompt extends Component {\n  constructor(props) {\n    super(props);\n    this.InputPass1 = React.createRef();\n    this.state = {\n      passok: 'initial',\n      open: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.setInitialModal = this.setInitialModal.bind(this);\n  }\n\n  toggleModal() {\n    // const currentState = this.state.open;\n    this.setState({\n      open: !this.state.open\n    });\n    console.log(this.state.open);\n  }\n\n  setInitialModal() {\n    const setInitial = 'initial';\n    this.setState({\n      passok: setInitial\n    });\n    this.setState({\n      open: false\n    });\n  }\n\n  deletePost() {\n    const postData = {\n      uri: this.props.uri,\n      key: this.InputPass1.current.state.inputValue.toString()\n    };\n\n    if (this.props.type == 'drivers') {\n      if (this.InputPass1.current.state.inputValue.toString() != '') {\n        axios.post(`https://zealous-snyder-fe1913.netlify.com/.netlify/functions/index/deleteConductores`, postData).then(res => {\n          if (res.data === 'ok') {\n            const passok = 'ok';\n            this.setState({\n              passok\n            });\n          } else {\n            const passok = 'wrong';\n            this.setState({\n              passok\n            });\n            console.log('wrong');\n          }\n        });\n      } else {}\n    } else if (this.props.type == 'lifters') {\n      if (this.InputPass1.current.state.inputValue.toString() != '') {\n        axios.post(`https://zealous-snyder-fe1913.netlify.com/.netlify/functions/index/deletePasajeros`, postData).then(res => {\n          if (res.data === 'ok') {\n            const passok = 'ok';\n            this.setState({\n              passok\n            });\n          } else {\n            const passok = 'wrong';\n            this.setState({\n              passok\n            });\n            console.log('wrong');\n          }\n        });\n      } else {}\n    } else {}\n  }\n\n  PopUpContent(passok) {\n    const Modal = posed.div({\n      enter: {\n        y: 0,\n        opacity: 1\n      },\n      exit: {\n        y: 50,\n        opacity: 0\n      }\n    });\n\n    if (passok == 'initial') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(PoseGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"exit\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(Popup, {\n        open: this.state.open,\n        onClose: this.setInitialModal,\n        modal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, close => React.createElement(Modal, {\n        key: \"modal\",\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"close\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"\\xD7\"), React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \" acola.me \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Ingresa la clave de tu post para eliminarlo.\", React.createElement(InputPass, {\n        uri: this.props.uri,\n        ref: this.InputPass1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"cerrar\"), React.createElement(\"button\", {\n        className: \"button\",\n        onClick: () => {\n          this.deletePost();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Enviar\")))))));\n    } else if (passok == 'wrong') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(PoseGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"exit\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(Popup, {\n        open: this.state.open,\n        onClose: this.setInitialModal,\n        modal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, close => React.createElement(\"div\", {\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"close\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"\\xD7\"), React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" acola.me \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content center-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Clave incorrecta\"), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))))));\n    } else if (passok == 'ok') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"exit\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(Popup, {\n        open: this.state.open,\n        onClose: () => {\n          this.props.update();\n          this.setInitialModal();\n        },\n        modal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, close => React.createElement(\"div\", {\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"close\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"\\xD7\"), React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \" acola.me \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content center-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Su post ha sido eliminado con \\xE9xito!\"), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })))));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.PopUpContent(this.state.passok));\n  }\n\n}\n\nexport default ClosingPrompt;","map":{"version":3,"sources":["/home/guido/Documents/GitHub/myreactapp/src/components/closingPromptComponent/closingPromptComponent.js"],"names":["React","Component","Popup","InputPass","axios","PoseGroup","ClosingPrompt","constructor","props","InputPass1","createRef","state","passok","open","toggleModal","bind","setInitialModal","setState","console","log","setInitial","deletePost","postData","uri","key","current","inputValue","toString","type","post","then","res","data","PopUpContent","Modal","posed","div","enter","y","opacity","exit","close","update","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport InputPass from './inputPassComponent';\nimport axios from 'axios';\nimport { PoseGroup } from 'react-pose';\n//components\n\n\nclass ClosingPrompt extends Component {\n    constructor(props) {\n        super(props);\n        this.InputPass1 = React.createRef();\n        this.state = {\n            passok: 'initial',\n            open: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.setInitialModal = this.setInitialModal.bind(this);\n        \n    }\n\n    toggleModal() {\n        // const currentState = this.state.open;\n        \n        this.setState({ open: !this.state.open });\n        console.log(this.state.open)\n    }\n\n    setInitialModal() {\n        const setInitial = 'initial';\n        this.setState({ passok: setInitial })\n        this.setState({ open: false })\n    }\n\n\n    deletePost() {\n        const postData = {\n            uri : this.props.uri,\n            key : this.InputPass1.current.state.inputValue.toString()\n        }\n        if ( this.props.type == 'drivers' ) {\n            if ( this.InputPass1.current.state.inputValue.toString() != '' ) {\n                axios.post(`https://zealous-snyder-fe1913.netlify.com/.netlify/functions/index/deleteConductores`, postData)\n                    .then(res => {\n                        if (res.data === 'ok') {\n                            const passok = 'ok'\n                            this.setState({passok})\n                        } else {\n                            const passok = 'wrong'\n                            this.setState({passok})\n                            console.log('wrong')\n                        }\n        \n                    })\n            } else {}\n        } else if ( this.props.type == 'lifters' ) {\n            if ( this.InputPass1.current.state.inputValue.toString() != '' ) {\n                axios.post(`https://zealous-snyder-fe1913.netlify.com/.netlify/functions/index/deletePasajeros`, postData)\n                    .then(res => {\n                        if (res.data === 'ok') {\n                            const passok = 'ok'\n                            this.setState({passok})\n                        } else {\n                            const passok = 'wrong'\n                            this.setState({passok})\n                            console.log('wrong')\n                        }\n        \n                    })\n            } else {}\n        } else {}\n    }\n\n    PopUpContent(passok) {\n        const Modal = posed.div({\n            enter: { y: 0, opacity: 1 },\n            exit: { y: 50, opacity: 0 }\n        });\n        if ( passok == 'initial' ) {\n            return <div>\n                <PoseGroup>\n                    <span className=\"exit\" onClick={this.toggleModal}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></span>\n                        <Popup open={this.state.open} onClose={this.setInitialModal} modal>\n                            {close => (\n                                <Modal key=\"modal\" className=\"modal\">\n                                    <a className=\"close\" onClick={this.toggleModal}>\n                                    &times;\n                                    </a>\n                                    <div className=\"header\"> acola.me </div>\n                                    <div><div className=\"content\">\n                                        Ingresa la clave de tu post para eliminarlo.\n                                            <InputPass uri={ this.props.uri } ref={ this.InputPass1 } />\n                                        </div>\n                                        <div className=\"actions\">\n                                        \n                                        <button\n                                            className=\"button\"\n                                            onClick={ this.toggleModal }\n                                        >\n                                            cerrar\n                                        </button>\n                                        <button\n                                            className=\"button\"\n                                            onClick={() => {\n                                                this.deletePost();\n                                            }}\n                                        >\n                                            Enviar\n                                        </button>\n                                        </div>\n                                        </div>  \n                                </Modal>\n                                )}\n                        </Popup>\n                    </PoseGroup>\n                </div>\n        } else if ( passok == 'wrong' ) {\n            return <div>\n                    <PoseGroup>\n                        <span className=\"exit\" onClick={this.toggleModal}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></span>\n                            <Popup open={this.state.open} onClose={this.setInitialModal} modal>\n                                {close => (\n                                    <div className=\"modal\">\n                                        <a className=\"close\" onClick={this.toggleModal}>\n                                        &times;\n                                        </a>\n                                        <div className=\"header\"> acola.me </div>\n                                        <div>\n                                        <div className=\"content center-content\">\n                                            Clave incorrecta\n                                            </div>\n                                            <div className=\"actions\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    )}\n                            </Popup> \n                        </PoseGroup>\n                    </div>\n        } else if ( passok == 'ok' ) {\n            return <div>\n                    <span className=\"exit\" onClick={this.toggleModal}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></span>\n                    <Popup open={this.state.open} onClose={() => {this.props.update(); this.setInitialModal();}} modal>\n                        {close => (\n                            <div className=\"modal\">\n                                <a className=\"close\" onClick={this.toggleModal}>\n                                &times;\n                                </a>\n                                <div className=\"header\"> acola.me </div>\n                                <div>\n                                <div className=\"content center-content\">\n                                    Su post ha sido eliminado con éxito!\n                                    </div>\n                                    <div className=\"actions\">\n                                    \n                                    </div>\n                                </div>\n                            </div>\n                            )}\n                    </Popup>\n                </div>\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                \n                { this.PopUpContent(this.state.passok) }\n            </div>\n        )\n    }\n}\n\nexport default ClosingPrompt;\n\n"]},"metadata":{},"sourceType":"module"}