{"ast":null,"code":"var escodegen = require(\"escodegen\");\n\nvar esprima = require(\"esprima\");\n\nvar Syntax = esprima.Syntax;\nmodule.exports = {\n  test: function (node) {\n    return node.type === Syntax.CallExpression && node.callee.type === Syntax.MemberExpression && node.callee.object.type === Syntax.Identifier && node.callee.object.name === \"Globalize\" && node.callee.property.type === Syntax.Identifier && node.callee.property.name === \"formatMessage\";\n  },\n  getFormatterOrParser: function (node) {\n    return \"Globalize.messageFormatter(\" + escodegen.generate(node.arguments[0]) + \")\";\n  }\n};","map":{"version":3,"sources":["C:/Users/guido/Documents/GitHub/myreactapp/node_modules/globalize-compiler/lib/extract-visitors/global-format-message.js"],"names":["escodegen","require","esprima","Syntax","module","exports","test","node","type","CallExpression","callee","MemberExpression","object","Identifier","name","property","getFormatterOrParser","generate","arguments"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAE,WAAF,CAAvB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAE,SAAF,CAArB;;AAEA,IAAIE,MAAM,GAAGD,OAAO,CAACC,MAArB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AAChBC,EAAAA,IAAI,EAAE,UAAUC,IAAV,EAAiB;AACtB,WAAOA,IAAI,CAACC,IAAL,KAAcL,MAAM,CAACM,cAArB,IACNF,IAAI,CAACG,MAAL,CAAYF,IAAZ,KAAqBL,MAAM,CAACQ,gBADtB,IAENJ,IAAI,CAACG,MAAL,CAAYE,MAAZ,CAAmBJ,IAAnB,KAA4BL,MAAM,CAACU,UAF7B,IAGNN,IAAI,CAACG,MAAL,CAAYE,MAAZ,CAAmBE,IAAnB,KAA4B,WAHtB,IAINP,IAAI,CAACG,MAAL,CAAYK,QAAZ,CAAqBP,IAArB,KAA8BL,MAAM,CAACU,UAJ/B,IAKNN,IAAI,CAACG,MAAL,CAAYK,QAAZ,CAAqBD,IAArB,KAA8B,eAL/B;AAMA,GARe;AAUhBE,EAAAA,oBAAoB,EAAE,UAAUT,IAAV,EAAiB;AACtC,WAAO,gCACNP,SAAS,CAACiB,QAAV,CAAoBV,IAAI,CAACW,SAAL,CAAgB,CAAhB,CAApB,CADM,GAEN,GAFD;AAGA;AAde,CAAjB","sourcesContent":["var escodegen = require( \"escodegen\" );\nvar esprima = require( \"esprima\" );\n\nvar Syntax = esprima.Syntax;\n\nmodule.exports = {\n\ttest: function( node ) {\n\t\treturn node.type === Syntax.CallExpression &&\n\t\t\tnode.callee.type === Syntax.MemberExpression &&\n\t\t\tnode.callee.object.type === Syntax.Identifier &&\n\t\t\tnode.callee.object.name === \"Globalize\" &&\n\t\t\tnode.callee.property.type === Syntax.Identifier &&\n\t\t\tnode.callee.property.name === \"formatMessage\";\n\t},\n\n\tgetFormatterOrParser: function( node ) {\n\t\treturn \"Globalize.messageFormatter(\" +\n\t\t\tescodegen.generate( node.arguments[ 0 ] ) +\n\t\t\t\")\";\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}