{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncParallelBailHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onResult,\n    onDone\n  }) {\n    let code = \"\";\n    code += `var _results = new Array(${this.options.taps.length});\\n`;\n    code += \"var _checkDone = () => {\\n\";\n    code += \"for(var i = 0; i < _results.length; i++) {\\n\";\n    code += \"var item = _results[i];\\n\";\n    code += \"if(item === undefined) return false;\\n\";\n    code += \"if(item.result !== undefined) {\\n\";\n    code += onResult(\"item.result\");\n    code += \"return true;\\n\";\n    code += \"}\\n\";\n    code += \"if(item.error) {\\n\";\n    code += onError(\"item.error\");\n    code += \"return true;\\n\";\n    code += \"}\\n\";\n    code += \"}\\n\";\n    code += \"return false;\\n\";\n    code += \"}\\n\";\n    code += this.callTapsParallel({\n      onError: (i, err, done, doneBreak) => {\n        let code = \"\";\n        code += `if(${i} < _results.length && ((_results.length = ${i + 1}), (_results[${i}] = { error: ${err} }), _checkDone())) {\\n`;\n        code += doneBreak(true);\n        code += \"} else {\\n\";\n        code += done();\n        code += \"}\\n\";\n        return code;\n      },\n      onResult: (i, result, done, doneBreak) => {\n        let code = \"\";\n        code += `if(${i} < _results.length && (${result} !== undefined && (_results.length = ${i + 1}), (_results[${i}] = { result: ${result} }), _checkDone())) {\\n`;\n        code += doneBreak(true);\n        code += \"} else {\\n\";\n        code += done();\n        code += \"}\\n\";\n        return code;\n      },\n      onTap: (i, run, done, doneBreak) => {\n        let code = \"\";\n\n        if (i > 0) {\n          code += `if(${i} >= _results.length) {\\n`;\n          code += done();\n          code += \"} else {\\n\";\n        }\n\n        code += run();\n        if (i > 0) code += \"}\\n\";\n        return code;\n      },\n      onDone\n    });\n    return code;\n  }\n\n}\n\nconst factory = new AsyncParallelBailHookCodeFactory();\n\nclass AsyncParallelBailHook extends Hook {\n  constructor(args) {\n    super(args);\n    this.call = this._call = undefined;\n  }\n\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nmodule.exports = AsyncParallelBailHook;","map":{"version":3,"sources":["C:/Users/guido/Documents/GitHub/myreactapp/node_modules/globalize-webpack-plugin/node_modules/tapable/lib/AsyncParallelBailHook.js"],"names":["Hook","require","HookCodeFactory","AsyncParallelBailHookCodeFactory","content","onError","onResult","onDone","code","options","taps","length","callTapsParallel","i","err","done","doneBreak","result","onTap","run","factory","AsyncParallelBailHook","constructor","args","call","_call","undefined","compile","setup","create","module","exports"],"mappings":"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","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Hook = require(\"./Hook\");\r\nconst HookCodeFactory = require(\"./HookCodeFactory\");\r\n\r\nclass AsyncParallelBailHookCodeFactory extends HookCodeFactory {\r\n\tcontent({ onError, onResult, onDone }) {\r\n\t\tlet code = \"\";\r\n\t\tcode += `var _results = new Array(${this.options.taps.length});\\n`;\r\n\t\tcode += \"var _checkDone = () => {\\n\";\r\n\t\tcode += \"for(var i = 0; i < _results.length; i++) {\\n\";\r\n\t\tcode += \"var item = _results[i];\\n\";\r\n\t\tcode += \"if(item === undefined) return false;\\n\";\r\n\t\tcode += \"if(item.result !== undefined) {\\n\";\r\n\t\tcode += onResult(\"item.result\");\r\n\t\tcode += \"return true;\\n\";\r\n\t\tcode += \"}\\n\";\r\n\t\tcode += \"if(item.error) {\\n\";\r\n\t\tcode += onError(\"item.error\");\r\n\t\tcode += \"return true;\\n\";\r\n\t\tcode += \"}\\n\";\r\n\t\tcode += \"}\\n\";\r\n\t\tcode += \"return false;\\n\";\r\n\t\tcode += \"}\\n\";\r\n\t\tcode += this.callTapsParallel({\r\n\t\t\tonError: (i, err, done, doneBreak) => {\r\n\t\t\t\tlet code = \"\";\r\n\t\t\t\tcode += `if(${i} < _results.length && ((_results.length = ${i + 1}), (_results[${i}] = { error: ${err} }), _checkDone())) {\\n`;\r\n\t\t\t\tcode += doneBreak(true);\r\n\t\t\t\tcode += \"} else {\\n\";\r\n\t\t\t\tcode += done();\r\n\t\t\t\tcode += \"}\\n\";\r\n\t\t\t\treturn code;\r\n\t\t\t},\r\n\t\t\tonResult: (i, result, done, doneBreak) => {\r\n\t\t\t\tlet code = \"\";\r\n\t\t\t\tcode += `if(${i} < _results.length && (${result} !== undefined && (_results.length = ${i + 1}), (_results[${i}] = { result: ${result} }), _checkDone())) {\\n`;\r\n\t\t\t\tcode += doneBreak(true);\r\n\t\t\t\tcode += \"} else {\\n\";\r\n\t\t\t\tcode += done();\r\n\t\t\t\tcode += \"}\\n\";\r\n\t\t\t\treturn code;\r\n\t\t\t},\r\n\t\t\tonTap: (i, run, done, doneBreak) => {\r\n\t\t\t\tlet code = \"\";\r\n\t\t\t\tif(i > 0) {\r\n\t\t\t\t\tcode += `if(${i} >= _results.length) {\\n`;\r\n\t\t\t\t\tcode += done();\r\n\t\t\t\t\tcode += \"} else {\\n\";\r\n\t\t\t\t}\r\n\t\t\t\tcode += run();\r\n\t\t\t\tif(i > 0) code += \"}\\n\";\r\n\t\t\t\treturn code;\r\n\t\t\t},\r\n\t\t\tonDone\r\n\t\t});\r\n\t\treturn code;\r\n\t}\r\n}\r\n\r\nconst factory = new AsyncParallelBailHookCodeFactory();\r\n\r\nclass AsyncParallelBailHook extends Hook {\r\n\tconstructor(args) {\r\n\t\tsuper(args);\r\n\t\tthis.call = this._call = undefined;\r\n\t}\r\n\r\n\tcompile(options) {\r\n\t\tfactory.setup(this, options);\r\n\t\treturn factory.create(options);\r\n\t}\r\n}\r\n\r\nmodule.exports = AsyncParallelBailHook;\r\n"]},"metadata":{},"sourceType":"script"}