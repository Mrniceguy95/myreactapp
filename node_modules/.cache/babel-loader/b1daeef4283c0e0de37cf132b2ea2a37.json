{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\Guido\\\\myreactapp\\\\src\\\\components\\\\closingPromptComponent\\\\closingPromptComponent.js\";\nimport React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\nimport InputPass from './inputPassComponent';\nimport axios from 'axios'; //components\n\nclass ClosingPrompt extends Component {\n  constructor(props) {\n    super(props);\n    this.InputPass1 = React.createRef();\n    this.state = {\n      passok: 'initial',\n      open: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.setInitialModal = this.setInitialModal.bind(this);\n  }\n\n  toggleModal() {\n    // const currentState = this.state.open;\n    this.setState({\n      open: !this.state.open\n    });\n    console.log(this.state.open);\n  }\n\n  setInitialModal() {\n    const setInitial = 'initial';\n    this.setState({\n      passok: setInitial\n    });\n    this.setState({\n      open: false\n    });\n  }\n\n  deletePost() {\n    const postData = {\n      uri: this.props.uri,\n      key: this.InputPass1.current.state.inputValue.toString()\n    };\n\n    if (this.InputPass1.current.state.inputValue.toString() != '') {\n      axios.post(`https://zealous-snyder-fe1913.netlify.com/.netlify/functions/index/deleteConductores`, postData).then(res => {\n        if (res.data === 'ok') {\n          const passok = 'ok';\n          this.setState({\n            passok\n          });\n        } else {\n          const passok = 'wrong';\n          this.setState({\n            passok\n          });\n          console.log('wrong');\n        }\n      });\n    } else {}\n  }\n\n  PopUpContent(passok) {\n    if (passok == 'initial') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"exit\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(Popup, {\n        open: this.state.open,\n        onClose: this.setInitialModal,\n        modal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, close => React.createElement(\"div\", {\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"close\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"\\xD7\"), React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" acola.me \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Ingresa la clave de tu post para eliminarlo.\", React.createElement(InputPass, {\n        uri: this.props.uri,\n        ref: this.InputPass1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"cerrar\"), React.createElement(\"button\", {\n        className: \"button\",\n        onClick: () => {\n          this.deletePost();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Enviar\"))))));\n    } else if (passok == 'wrong') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"exit\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Popup, {\n        open: this.state.open,\n        onClose: this.setInitialModal,\n        modal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, close => React.createElement(\"div\", {\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"close\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"\\xD7\"), React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \" acola.me \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content center-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Clave incorrecta\"), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })))), \" \");\n    } else if (passok == 'ok') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"exit\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Popup, {\n        open: this.state.open,\n        onClose: () => {\n          this.props.update();\n          this.setInitialModal();\n        },\n        modal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, close => React.createElement(\"div\", {\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"close\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"\\xD7\"), React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \" acola.me \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content center-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Su post ha sido eliminado con \\xE9xito!\"), React.createElement(\"div\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })))));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.PopUpContent(this.state.passok));\n  }\n\n}\n\nexport default ClosingPrompt;","map":{"version":3,"sources":["C:/Users/ASUS/Documents/Guido/myreactapp/src/components/closingPromptComponent/closingPromptComponent.js"],"names":["React","Component","Popup","InputPass","axios","ClosingPrompt","constructor","props","InputPass1","createRef","state","passok","open","toggleModal","bind","setInitialModal","setState","console","log","setInitial","deletePost","postData","uri","key","current","inputValue","toString","post","then","res","data","PopUpContent","close","update","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Popup from \"reactjs-popup\";\r\nimport InputPass from './inputPassComponent';\r\nimport axios from 'axios';\r\n//components\r\n\r\n\r\nclass ClosingPrompt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.InputPass1 = React.createRef();\r\n        this.state = {\r\n            passok: 'initial',\r\n            open: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.setInitialModal = this.setInitialModal.bind(this);\r\n        \r\n    }\r\n\r\n    toggleModal() {\r\n        // const currentState = this.state.open;\r\n        \r\n        this.setState({ open: !this.state.open });\r\n        console.log(this.state.open)\r\n    }\r\n\r\n    setInitialModal() {\r\n        const setInitial = 'initial';\r\n        this.setState({ passok: setInitial })\r\n        this.setState({ open: false })\r\n    }\r\n\r\n\r\n    deletePost() {\r\n        \r\n        const postData = {\r\n            uri : this.props.uri,\r\n            key : this.InputPass1.current.state.inputValue.toString()\r\n        }\r\n        if ( this.InputPass1.current.state.inputValue.toString() != '' ) {\r\n        axios.post(`https://zealous-snyder-fe1913.netlify.com/.netlify/functions/index/deleteConductores`, postData)\r\n            .then(res => {\r\n                if (res.data === 'ok') {\r\n                    const passok = 'ok'\r\n                    this.setState({passok})\r\n                } else {\r\n                    const passok = 'wrong'\r\n                    this.setState({passok})\r\n                    console.log('wrong')\r\n                }\r\n\r\n            })\r\n        } else {}\r\n        \r\n    }\r\n\r\n    PopUpContent(passok) {\r\n        \r\n        if ( passok == 'initial' ) {\r\n            return <div><span className=\"exit\" onClick={this.toggleModal}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n                    <Popup open={this.state.open} onClose={this.setInitialModal} modal>\r\n                        {close => (\r\n                            <div className=\"modal\">\r\n                                <a className=\"close\" onClick={this.toggleModal}>\r\n                                &times;\r\n                                </a>\r\n                                <div className=\"header\"> acola.me </div>\r\n                                <div><div className=\"content\">\r\n                                    Ingresa la clave de tu post para eliminarlo.\r\n                                        <InputPass uri={ this.props.uri } ref={ this.InputPass1 } />\r\n                                    </div>\r\n                                    <div className=\"actions\">\r\n                                    \r\n                                    <button\r\n                                        className=\"button\"\r\n                                        onClick={ this.toggleModal }\r\n                                    >\r\n                                        cerrar\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"button\"\r\n                                        onClick={() => {\r\n                                            this.deletePost();\r\n                                        }}\r\n                                    >\r\n                                        Enviar\r\n                                    </button>\r\n                                    </div>\r\n                                    </div>  \r\n                            </div>\r\n                            )}\r\n                    </Popup></div>\r\n        } else if ( passok == 'wrong' ) {\r\n            return <div><span className=\"exit\" onClick={this.toggleModal}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n                    <Popup open={this.state.open} onClose={this.setInitialModal} modal>\r\n                        {close => (\r\n                            <div className=\"modal\">\r\n                                <a className=\"close\" onClick={this.toggleModal}>\r\n                                &times;\r\n                                </a>\r\n                                <div className=\"header\"> acola.me </div>\r\n                                <div>\r\n                                <div className=\"content center-content\">\r\n                                    Clave incorrecta\r\n                                    </div>\r\n                                    <div className=\"actions\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n                    </Popup> </div>\r\n        } else if ( passok == 'ok' ) {\r\n            return <div>\r\n                    <span className=\"exit\" onClick={this.toggleModal}><i className=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n                    <Popup open={this.state.open} onClose={() => {this.props.update(); this.setInitialModal();}} modal>\r\n                        {close => (\r\n                            <div className=\"modal\">\r\n                                <a className=\"close\" onClick={this.toggleModal}>\r\n                                &times;\r\n                                </a>\r\n                                <div className=\"header\"> acola.me </div>\r\n                                <div>\r\n                                <div className=\"content center-content\">\r\n                                    Su post ha sido eliminado con éxito!\r\n                                    </div>\r\n                                    <div className=\"actions\">\r\n                                    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n                    </Popup>\r\n                    </div>\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                { this.PopUpContent(this.state.passok) }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClosingPrompt;\r\n\r\n"]},"metadata":{},"sourceType":"module"}