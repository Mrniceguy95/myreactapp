{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesWaterfallHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onResult,\n    onDone\n  }) {\n    return this.callTapsSeries({\n      onError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n      onResult: (i, result, next) => {\n        let code = \"\";\n        code += `if(${result} !== undefined) {\\n`;\n        code += `${this._args[0]} = ${result};\\n`;\n        code += `}\\n`;\n        code += next();\n        return code;\n      },\n      onDone: () => onResult(this._args[0])\n    });\n  }\n\n}\n\nconst factory = new AsyncSeriesWaterfallHookCodeFactory();\n\nclass AsyncSeriesWaterfallHook extends Hook {\n  constructor(args) {\n    super(args);\n    if (args.length < 1) throw new Error(\"Waterfall hooks must have at least one argument\");\n    this.call = this._call = undefined;\n  }\n\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nmodule.exports = AsyncSeriesWaterfallHook;","map":{"version":3,"sources":["C:/Users/guido/Documents/GitHub/myreactapp/node_modules/globalize-webpack-plugin/node_modules/tapable/lib/AsyncSeriesWaterfallHook.js"],"names":["Hook","require","HookCodeFactory","AsyncSeriesWaterfallHookCodeFactory","content","onError","onResult","onDone","callTapsSeries","i","err","next","doneBreak","result","code","_args","factory","AsyncSeriesWaterfallHook","constructor","args","length","Error","call","_call","undefined","compile","options","setup","create","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,mCAAN,SAAkDD,eAAlD,CAAkE;AACjEE,EAAAA,OAAO,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAAD,EAAgC;AACtC,WAAO,KAAKC,cAAL,CAAoB;AAC1BH,MAAAA,OAAO,EAAE,CAACI,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf,KAA6BP,OAAO,CAACK,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CADpC;AAE1BN,MAAAA,QAAQ,EAAE,CAACG,CAAD,EAAII,MAAJ,EAAYF,IAAZ,KAAqB;AAC9B,YAAIG,IAAI,GAAG,EAAX;AACAA,QAAAA,IAAI,IAAK,MAAKD,MAAO,qBAArB;AACAC,QAAAA,IAAI,IAAK,GAAE,KAAKC,KAAL,CAAW,CAAX,CAAc,MAAKF,MAAO,KAArC;AACAC,QAAAA,IAAI,IAAK,KAAT;AACAA,QAAAA,IAAI,IAAIH,IAAI,EAAZ;AACA,eAAOG,IAAP;AACA,OATyB;AAU1BP,MAAAA,MAAM,EAAE,MAAMD,QAAQ,CAAC,KAAKS,KAAL,CAAW,CAAX,CAAD;AAVI,KAApB,CAAP;AAYA;;AAdgE;;AAiBlE,MAAMC,OAAO,GAAG,IAAIb,mCAAJ,EAAhB;;AAEA,MAAMc,wBAAN,SAAuCjB,IAAvC,CAA4C;AAC3CkB,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,UAAMA,IAAN;AACA,QAAGA,IAAI,CAACC,MAAL,GAAc,CAAjB,EAAoB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACpB,SAAKC,IAAL,GAAY,KAAKC,KAAL,GAAaC,SAAzB;AACA;;AAEDC,EAAAA,OAAO,CAACC,OAAD,EAAU;AAChBV,IAAAA,OAAO,CAACW,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,WAAOV,OAAO,CAACY,MAAR,CAAeF,OAAf,CAAP;AACA;;AAV0C;;AAa5CG,MAAM,CAACC,OAAP,GAAiBb,wBAAjB","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Hook = require(\"./Hook\");\r\nconst HookCodeFactory = require(\"./HookCodeFactory\");\r\n\r\nclass AsyncSeriesWaterfallHookCodeFactory extends HookCodeFactory {\r\n\tcontent({ onError, onResult, onDone }) {\r\n\t\treturn this.callTapsSeries({\r\n\t\t\tonError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\r\n\t\t\tonResult: (i, result, next) => {\r\n\t\t\t\tlet code = \"\";\r\n\t\t\t\tcode += `if(${result} !== undefined) {\\n`;\r\n\t\t\t\tcode += `${this._args[0]} = ${result};\\n`;\r\n\t\t\t\tcode += `}\\n`;\r\n\t\t\t\tcode += next();\r\n\t\t\t\treturn code;\r\n\t\t\t},\r\n\t\t\tonDone: () => onResult(this._args[0])\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst factory = new AsyncSeriesWaterfallHookCodeFactory();\r\n\r\nclass AsyncSeriesWaterfallHook extends Hook {\r\n\tconstructor(args) {\r\n\t\tsuper(args);\r\n\t\tif(args.length < 1) throw new Error(\"Waterfall hooks must have at least one argument\");\r\n\t\tthis.call = this._call = undefined;\r\n\t}\r\n\r\n\tcompile(options) {\r\n\t\tfactory.setup(this, options);\r\n\t\treturn factory.create(options);\r\n\t}\r\n}\r\n\r\nmodule.exports = AsyncSeriesWaterfallHook;\r\n"]},"metadata":{},"sourceType":"script"}