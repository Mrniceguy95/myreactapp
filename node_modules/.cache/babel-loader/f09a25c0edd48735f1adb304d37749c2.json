{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass SyncWaterfallHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onResult,\n    onDone,\n    rethrowIfPossible\n  }) {\n    return this.callTapsSeries({\n      onError: (i, err) => onError(err),\n      onResult: (i, result, next) => {\n        let code = \"\";\n        code += `if(${result} !== undefined) {\\n`;\n        code += `${this._args[0]} = ${result};\\n`;\n        code += `}\\n`;\n        code += next();\n        return code;\n      },\n      onDone: () => onResult(this._args[0]),\n      rethrowIfPossible\n    });\n  }\n\n}\n\nconst factory = new SyncWaterfallHookCodeFactory();\n\nclass SyncWaterfallHook extends Hook {\n  constructor(args) {\n    super(args);\n    if (args.length < 1) throw new Error(\"Waterfall hooks must have at least one argument\");\n  }\n\n  tapAsync() {\n    throw new Error(\"tapAsync is not supported on a SyncWaterfallHook\");\n  }\n\n  tapPromise() {\n    throw new Error(\"tapPromise is not supported on a SyncWaterfallHook\");\n  }\n\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nmodule.exports = SyncWaterfallHook;","map":{"version":3,"sources":["C:/Users/guido/Documents/GitHub/myreactapp/node_modules/globalize-webpack-plugin/node_modules/tapable/lib/SyncWaterfallHook.js"],"names":["Hook","require","HookCodeFactory","SyncWaterfallHookCodeFactory","content","onError","onResult","onDone","rethrowIfPossible","callTapsSeries","i","err","result","next","code","_args","factory","SyncWaterfallHook","constructor","args","length","Error","tapAsync","tapPromise","compile","options","setup","create","module","exports"],"mappings":"AAAA;;;;AAIA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,4BAAN,SAA2CD,eAA3C,CAA2D;AAC1DE,EAAAA,OAAO,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA;AAA7B,GAAD,EAAmD;AACzD,WAAO,KAAKC,cAAL,CAAoB;AAC1BJ,MAAAA,OAAO,EAAE,CAACK,CAAD,EAAIC,GAAJ,KAAYN,OAAO,CAACM,GAAD,CADF;AAE1BL,MAAAA,QAAQ,EAAE,CAACI,CAAD,EAAIE,MAAJ,EAAYC,IAAZ,KAAqB;AAC9B,YAAIC,IAAI,GAAG,EAAX;AACAA,QAAAA,IAAI,IAAK,MAAKF,MAAO,qBAArB;AACAE,QAAAA,IAAI,IAAK,GAAE,KAAKC,KAAL,CAAW,CAAX,CAAc,MAAKH,MAAO,KAArC;AACAE,QAAAA,IAAI,IAAK,KAAT;AACAA,QAAAA,IAAI,IAAID,IAAI,EAAZ;AACA,eAAOC,IAAP;AACA,OATyB;AAU1BP,MAAAA,MAAM,EAAE,MAAMD,QAAQ,CAAC,KAAKS,KAAL,CAAW,CAAX,CAAD,CAVI;AAW1BP,MAAAA;AAX0B,KAApB,CAAP;AAaA;;AAfyD;;AAkB3D,MAAMQ,OAAO,GAAG,IAAIb,4BAAJ,EAAhB;;AAEA,MAAMc,iBAAN,SAAgCjB,IAAhC,CAAqC;AACpCkB,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,UAAMA,IAAN;AACA,QAAGA,IAAI,CAACC,MAAL,GAAc,CAAjB,EAAoB,MAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACpB;;AAEDC,EAAAA,QAAQ,GAAG;AACV,UAAM,IAAID,KAAJ,CAAU,kDAAV,CAAN;AACA;;AAEDE,EAAAA,UAAU,GAAG;AACZ,UAAM,IAAIF,KAAJ,CAAU,oDAAV,CAAN;AACA;;AAEDG,EAAAA,OAAO,CAACC,OAAD,EAAU;AAChBT,IAAAA,OAAO,CAACU,KAAR,CAAc,IAAd,EAAoBD,OAApB;AACA,WAAOT,OAAO,CAACW,MAAR,CAAeF,OAAf,CAAP;AACA;;AAjBmC;;AAoBrCG,MAAM,CAACC,OAAP,GAAiBZ,iBAAjB","sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\"use strict\";\r\n\r\nconst Hook = require(\"./Hook\");\r\nconst HookCodeFactory = require(\"./HookCodeFactory\");\r\n\r\nclass SyncWaterfallHookCodeFactory extends HookCodeFactory {\r\n\tcontent({ onError, onResult, onDone, rethrowIfPossible }) {\r\n\t\treturn this.callTapsSeries({\r\n\t\t\tonError: (i, err) => onError(err),\r\n\t\t\tonResult: (i, result, next) => {\r\n\t\t\t\tlet code = \"\";\r\n\t\t\t\tcode += `if(${result} !== undefined) {\\n`;\r\n\t\t\t\tcode += `${this._args[0]} = ${result};\\n`;\r\n\t\t\t\tcode += `}\\n`;\r\n\t\t\t\tcode += next();\r\n\t\t\t\treturn code;\r\n\t\t\t},\r\n\t\t\tonDone: () => onResult(this._args[0]),\r\n\t\t\trethrowIfPossible\r\n\t\t});\r\n\t}\r\n}\r\n\r\nconst factory = new SyncWaterfallHookCodeFactory();\r\n\r\nclass SyncWaterfallHook extends Hook {\r\n\tconstructor(args) {\r\n\t\tsuper(args);\r\n\t\tif(args.length < 1) throw new Error(\"Waterfall hooks must have at least one argument\");\r\n\t}\r\n\r\n\ttapAsync() {\r\n\t\tthrow new Error(\"tapAsync is not supported on a SyncWaterfallHook\");\r\n\t}\r\n\r\n\ttapPromise() {\r\n\t\tthrow new Error(\"tapPromise is not supported on a SyncWaterfallHook\");\r\n\t}\r\n\r\n\tcompile(options) {\r\n\t\tfactory.setup(this, options);\r\n\t\treturn factory.create(options);\r\n\t}\r\n}\r\n\r\nmodule.exports = SyncWaterfallHook;\r\n"]},"metadata":{},"sourceType":"script"}