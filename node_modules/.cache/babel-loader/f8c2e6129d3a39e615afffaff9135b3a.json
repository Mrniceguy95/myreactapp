{"ast":null,"code":"\"use strict\";\n\nconst DevelopmentModePlugin = require(\"./DevelopmentModePlugin\");\n\nconst ProductionModePlugin = require(\"./ProductionModePlugin\");\n/**\n * Development Mode:\n * - Automatically loads CLDR data (i.e., injects `Globalize.load(<necessary CLDR data>)`).\n * - Automatically define default locale (i.e., injects `Globalize.locale(<defaultLocale>)`).\n *\n * Production Mode:\n * - Have Globalize modules replaced with their runtime modules.\n * - Statically extracts formatters and parsers from user code and pre-compile\n *   them into respective XXXX.\n */\n\n\nclass GlobalizePlugin {\n  constructor(attributes) {\n    this.attributes = attributes || {};\n  }\n\n  apply(compiler) {\n    const plugin = this.attributes.production ? new ProductionModePlugin(this.attributes) : new DevelopmentModePlugin(this.attributes);\n    plugin.apply(compiler);\n  }\n\n}\n\nmodule.exports = GlobalizePlugin;","map":{"version":3,"sources":["C:/Users/guido/Documents/GitHub/myreactapp/node_modules/globalize-webpack-plugin/index.js"],"names":["DevelopmentModePlugin","require","ProductionModePlugin","GlobalizePlugin","constructor","attributes","apply","compiler","plugin","production","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,yBAAD,CAArC;;AACA,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,wBAAD,CAApC;AAEA;;;;;;;;;;;;AAUA,MAAME,eAAN,CAAsB;AACpBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACtB,SAAKA,UAAL,GAAkBA,UAAU,IAAI,EAAhC;AACD;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACd,UAAMC,MAAM,GAAG,KAAKH,UAAL,CAAgBI,UAAhB,GACb,IAAIP,oBAAJ,CAAyB,KAAKG,UAA9B,CADa,GAEb,IAAIL,qBAAJ,CAA0B,KAAKK,UAA/B,CAFF;AAGAG,IAAAA,MAAM,CAACF,KAAP,CAAaC,QAAb;AACD;;AAVmB;;AAatBG,MAAM,CAACC,OAAP,GAAiBR,eAAjB","sourcesContent":["\"use strict\";\n\nconst DevelopmentModePlugin = require(\"./DevelopmentModePlugin\");\nconst ProductionModePlugin = require(\"./ProductionModePlugin\");\n\n/**\n * Development Mode:\n * - Automatically loads CLDR data (i.e., injects `Globalize.load(<necessary CLDR data>)`).\n * - Automatically define default locale (i.e., injects `Globalize.locale(<defaultLocale>)`).\n *\n * Production Mode:\n * - Have Globalize modules replaced with their runtime modules.\n * - Statically extracts formatters and parsers from user code and pre-compile\n *   them into respective XXXX.\n */\nclass GlobalizePlugin {\n  constructor(attributes) {\n    this.attributes = attributes || {};\n  }\n\n  apply(compiler) {\n    const plugin = this.attributes.production ?\n      new ProductionModePlugin(this.attributes) :\n      new DevelopmentModePlugin(this.attributes);\n    plugin.apply(compiler);\n  }\n}\n\nmodule.exports = GlobalizePlugin;\n"]},"metadata":{},"sourceType":"script"}